elementary sorting algorithms
  javascripts built in sort - sorts by unicode unless given a comparative function
  bubble sort
    not commonly used, inefficient
    largest values bubbles to the top/end
    O(n^2)
    only good when data is almost all sorted
  selection sort
    similar to bubble sort, swaps smallest value to start
    O(n^2)
    only good when you want to bubble sort but with less swaps
  insertion sort
    inserts next value into correct spot
    O(n^2)
    good in scenarios where data is sorted and each value comes in one at a time
  all three have a space complexity of O(1)

intermediate sorting algorithms
  merge sort
    combination of merging and sorting
    exploits the fact that single element arrays are sorted
    time complexity of merging two arrays: O(n+m) with n and m being the size of the two arrays
    time complexity of merge sort: O(nlogn)
      log n for decomposition of arrays
      in each decomposition, there are n comparisons
    space complexity of O(n) because it makes n single arrays
  quick sort
    like merge sort, exploits that single element arrays are always sorted
    time complexity best case is nlogn, worst n^2
    space complexity of O(logn) because its mutating the given array with new variables log n times
  radix sort
